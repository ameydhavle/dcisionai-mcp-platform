[tool:pytest]
# MCP Compliance Testing Configuration
# Production-ready pytest configuration for comprehensive testing

# Test discovery
testpaths = tests/mcp_compliance
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test execution
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --disable-warnings
    --cov=tests.mcp_compliance
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=90

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    compliance: marks tests as compliance tests
    critical: marks tests as critical compliance tests
    security: marks tests as security-related tests

# Filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning

# Test timeout (seconds)
timeout = 300

# Parallel execution
# num_workers = auto

# Coverage configuration
[coverage:run]
source = tests/mcp_compliance
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Mypy configuration
[mypy]
python_version = 3.9
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True

# Black configuration
[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["tests.mcp_compliance"]
known_third_party = ["aiohttp", "websockets", "pyyaml", "jinja2"]
