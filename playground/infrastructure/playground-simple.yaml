AWSTemplateFormatVersion: '2010-09-09'
Description: 'DcisionAI Manufacturing Playground - Simple Version'

Parameters:
  DomainName:
    Type: String
    Default: 'dcisionai.com'
    Description: 'Domain name for the playground'
  
  Subdomain:
    Type: String
    Default: 'playground'
    Description: 'Subdomain for the playground'
  
  CertificateArn:
    Type: String
    Description: 'ARN of the SSL certificate for the domain'
  
  HostedZoneId:
    Type: String
    Description: 'Route53 hosted zone ID for the domain'

Resources:
  # S3 Bucket for static website
  PlaygroundBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${AWS::AccountId}-dcisionai-playground-${AWS::Region}'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ['*']
            AllowedMethods: [GET, POST, PUT, DELETE, HEAD]
            AllowedOrigins: ['*']
            MaxAge: 3600

  # S3 Bucket Policy
  PlaygroundBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PlaygroundBucket
      PolicyDocument:
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Sub '${PlaygroundBucket}/*'

  # CloudFront Distribution
  PlaygroundDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Sub '${Subdomain}.${DomainName}'
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        PriceClass: PriceClass_100
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt PlaygroundBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: ''
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods: [GET, HEAD, OPTIONS]
          CachedMethods: [GET, HEAD]
          Compress: true
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          MinTTL: 0
          DefaultTTL: 3600
          MaxTTL: 86400
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021

  # Route53 Record
  PlaygroundDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Sub '${Subdomain}.${DomainName}'
      Type: A
      AliasTarget:
        DNSName: !GetAtt PlaygroundDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2  # CloudFront hosted zone ID

Outputs:
  PlaygroundURL:
    Description: 'URL of the playground interface'
    Value: !Sub 'https://${Subdomain}.${DomainName}'
    Export:
      Name: !Sub '${AWS::StackName}-PlaygroundURL'

  PlaygroundDistributionId:
    Description: 'CloudFront Distribution ID'
    Value: !Ref PlaygroundDistribution
    Export:
      Name: !Sub '${AWS::StackName}-DistributionId'

  PlaygroundBucketName:
    Description: 'S3 Bucket Name for static files'
    Value: !Ref PlaygroundBucket
    Export:
      Name: !Sub '${AWS::StackName}-BucketName'
