AWSTemplateFormatVersion: '2010-09-09'
Description: 'DcisionAI Gateway Basic Infrastructure'

Parameters:
  Environment:
    Type: String
    Default: staging
    Description: Environment name (staging/production)
    AllowedValues: [staging, production]

Resources:
  # Cognito User Pool for Authentication
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub "DcisionAI-Users-${Environment}"
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AutoVerifiedAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
      Schema:
        - Name: email
          AttributeDataType: String
          Required: true
          Mutable: true
        - Name: tenant_id
          AttributeDataType: String
          Required: false
          Mutable: true
        - Name: plan
          AttributeDataType: String
          Required: false
          Mutable: true

  # Cognito User Pool Client
  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref CognitoUserPool
      ClientName: !Sub "DcisionAI-Client-${Environment}"
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_SRP_AUTH
      CallbackURLs:
        - https://api.dcisionai.com/callback
      LogoutURLs:
        - https://api.dcisionai.com/logout

  # DynamoDB Table for API Keys and Rate Limiting
  APIKeysTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "dcisionai-api-keys-${Environment}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: api_key
          AttributeType: S
        - AttributeName: tenant_id
          AttributeType: S
      KeySchema:
        - AttributeName: api_key
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: TenantIndex
          KeySchema:
            - AttributeName: tenant_id
              KeyType: HASH
          Projection:
            ProjectionType: ALL

  # DynamoDB Table for Rate Limiting
  RateLimitTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "dcisionai-rate-limits-${Environment}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: key
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: S
      KeySchema:
        - AttributeName: key
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true

  # DynamoDB Table for Tenant Management
  TenantsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "dcisionai-tenants-${Environment}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: tenant_id
          AttributeType: S
        - AttributeName: email
          AttributeType: S
      KeySchema:
        - AttributeName: tenant_id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: EmailIndex
          KeySchema:
            - AttributeName: email
              KeyType: HASH
          Projection:
            ProjectionType: ALL

  # CloudWatch Log Group for Gateway
  GatewayLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/gateway/DcisionAI-Gateway-${Environment}"
      RetentionInDays: 30

  # SNS Topic for Alerts
  GatewayAlertsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "DcisionAI-Gateway-Alerts-${Environment}"
      DisplayName: !Sub "DcisionAI Gateway Alerts ${Environment}"

Outputs:
  UserPoolId:
    Description: Cognito User Pool ID
    Value: !Ref CognitoUserPool
    Export:
      Name: !Sub "${AWS::StackName}-UserPoolId"

  UserPoolClientId:
    Description: Cognito User Pool Client ID
    Value: !Ref CognitoUserPoolClient
    Export:
      Name: !Sub "${AWS::StackName}-UserPoolClientId"

  TenantsTableName:
    Description: DynamoDB table for tenant management
    Value: !Ref TenantsTable
    Export:
      Name: !Sub "${AWS::StackName}-TenantsTable"

  APIKeysTableName:
    Description: DynamoDB table for API keys
    Value: !Ref APIKeysTable
    Export:
      Name: !Sub "${AWS::StackName}-APIKeysTable"

  RateLimitTableName:
    Description: DynamoDB table for rate limiting
    Value: !Ref RateLimitTable
    Export:
      Name: !Sub "${AWS::StackName}-RateLimitTable"

  AlertsTopicArn:
    Description: SNS topic for alerts
    Value: !Ref GatewayAlertsTopic
    Export:
      Name: !Sub "${AWS::StackName}-AlertsTopic"
